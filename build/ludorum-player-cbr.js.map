{"version":3,"sources":["../src/__prologue__.js","../src/CaseBase.js","../src/CBRPlayer.js","../src/dbs/MemoryCaseBase.js","../src/dbs/SQLiteCaseBase.js","../src/utils.js","../src/encodings/ticTacToe_direct.js","../src/encodings/ticTacToe_abstract.js","../src/__epilogue__.js"],"names":[],"mappings":";;;;;;;;eAAA,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;AAC/B,EAAE;AACF,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE;AACxD,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gFAAgF;AACpG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;AAC5B,EAAE,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;AAC7C,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;AACrB,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;AACzB,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;AAC/B,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC3B,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC3B,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;AACvB;AACA,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,iFAAiF;AACpG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAChB,EAAE,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE;AACpC,EAAE,QAAQ,CAAC,CAAC,CAAC,kBAAkB,EAAE;AACjC,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC;AACrB,EAAE,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE;AAC5C,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE;AAC3C;AACA,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;AAC9D,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE;AAC9E,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;AAC9D,CAAC,EAAE;;;ACxBH,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC;AACf;AACA,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;AACxC,EAAE;AACF,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;AAChD,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AACzC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;AACpC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AACxD,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;AACnC,EAAE,CAAC;AACH,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AACxD,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;AACnC,EAAE,CAAC;AACH,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC9D,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC;AAC/C,EAAE,CAAC;AACH,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC;AAC9D,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;AAC5F,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;AACjC,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;AAC5E;AACA,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM;AAChG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC;AAClD,CAAC,EAAE;AACH,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI;AACnE;AACA,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,2EAA2E,CAAC,EAAE;AAChG;AACA,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;AAC5F,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;AAChB,CAAC,EAAE;AACH,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;AACpD,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7E,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;AAChE,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE;AAC7B,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AACX,IAAI,MAAM,CAAC,CAAC,CAAC;AACb,GAAG,CAAC;AACJ,EAAE,GAAG,GAAG,GAAG;AACX,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,oEAAoE,CAAC,EAAE;AAChG;AACA,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC;AACjE,CAAC,EAAE;AACH,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI;AACtD;AACA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG;AAC9F,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;AAChC,CAAC,EAAE;AACH,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AAC9C,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;AACjB,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;AACnD,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACvC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG;AAC/B,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;AAC5B,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC;AAC/B,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,IAAI,EAAE;AACN,GAAG,GAAG;AACN,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClD,IAAI,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE;AACvB,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AACtB,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;AACvD,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;AAC3B,KAAK,YAAY,CAAC,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AAC5C,MAAM,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,EAAE;AACzD,KAAK,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE;AACxB,KAAK,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;AACxB,MAAM,KAAK,CAAC;AACZ,KAAK,CAAC;AACN,IAAI,CAAC;AACL,GAAG,CAAC;AACJ,GAAG,MAAM,CAAC,KAAK,CAAC;AAChB,EAAE,GAAG;AACL,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;AAC5F,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;AAC7D,CAAC,EAAE;AACH,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AACpD,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;AACjB,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACvB,GAAG,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACzC,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,IAAI;AAC3D,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE;AAChC,EAAE,CAAC;AACH,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACpD,GAAG,UAAU,GAAG;AAChB,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE;AACvC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACxB,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,IAAI;AAC3D,GAAG,CAAC;AACJ,GAAG,aAAa,CAAC,UAAU,EAAE;AAC7B,GAAG,MAAM,CAAC,CAAC,CAAC;AACZ,EAAE,GAAG;AACL,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG;AAC/F,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;AACzE;AACA,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;AAC5F,CAAC,OAAO,CAAC;AACT;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;AACrD;AACA,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC;AACzF;AACA,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC;AACjG;AACA,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;AAC9E,CAAC,EAAE;AACH,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;AACvC,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG;AAC1B,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;AACjB,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;AACpC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AAC3C,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,GAAG;AAC3F,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE;AAC1C,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;AAChC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;AACvB,EAAE,CAAC;AACH,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;AAClF,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,OAAO,GAAG;AACjD,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE;AACvE,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC;AACrB,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAClC,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE;AAClD,GAAG,GAAG,CAAC,OAAO,EAAE;AAChB,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,wEAAwE,CAAC,EAAE;AAChG;AACA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG;AAC5F,CAAC,OAAO,CAAC;AACT,CAAC,EAAE;AACH,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,IAAI;AACpD;AACA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClF,CAAC,EAAE;AACH,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3B,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AAChB,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;AAClC,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACrD,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,GAAG;AACnE,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AACzB,GAAG,GAAG,OAAO,GAAG;AAChB,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACzB,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;AAChG,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AACtB,CAAC,EAAE;AACH,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;AAClD,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AACjC,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;AACzD,CAAC,EAAE;AACH;AACA,CAAC,GAAG,IAAI;AACR,CAAC,EAAE;AACH,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AACrE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AACnC,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;AAC1C,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9D,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG;AAC7C,GAAG,GAAG,QAAQ,GAAG;AACjB,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AACxB,EAAE,QAAQ,CAAC,GAAG,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG;AAC5D,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,IAAI;AACvD,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE;AAChC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;AACvB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE;AAC/C,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACtC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK;AAC1D,IAAI,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG;AAChD,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;AACpB,KAAK,KAAK,EAAE,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AACxE,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,MAAM;AACtC,IAAI,CAAC;AACL,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AACf,GAAG,CAAC;AACJ,EAAE,GAAG;AACL,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG;AAClC,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE;AAC1B,CAAC,EAAE;AACH;AACA,CAAC,GAAG,IAAI;AACR,CAAC,EAAE;AACH,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK;AACvE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AACnC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9D,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG;AAC7C,GAAG,GAAG,QAAQ,GAAG;AACjB,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;AAC9B,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AACvD,GAAG,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;AAC3E,EAAE,GAAG,GAAG,GAAG;AACX,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,2EAA2E,CAAC,EAAE;AAChG;AACA,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;AACvB,EAAE,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE;AACzB,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK;AACxD,GAAG,MAAM,CAAC,EAAE;AACZ,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AACnB,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI;AAClE,GAAG,GAAG;AACN,EAAE,CAAC;AACH,CAAC,EAAE;AACH,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;;AChOf,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;AACjB;AACA,EAAE;AACF,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAClE,CAAC,GAAG,CAAC;AACL,CAAC,EAAE;AACH,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1C,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;AACpC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC;AAC5C,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AACpC,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC;AACL,CAAC,EAAE;AACH,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9C,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI;AACnB,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACrD,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;AACxC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG;AAC5B,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;AACjB,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;AAC1C,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;AACrC,GAAG,CAAC;AACJ,EAAE,GAAG;AACL,EAAE,MAAM,CAAC,CAAC,CAAC;AACX,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;AAChG,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK;AAC9F,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC;AACvF,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;AAC/F,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG;AACvE,CAAC,EAAE;AACH,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1C,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;AAC/C,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG;AAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,GAAG,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE;AAC5B,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG;AACzD,GAAG,CAAC;AACJ,EAAE,CAAC;AACH,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/D,IAAI,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG;AACrC,GAAG,GAAG,QAAQ,GAAG;AACjB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;AACjC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACf,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;AACrB,GAAG,CAAC;AACJ,EAAE,GAAG;AACL,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC1B,GAAG,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG;AACtC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,GAAG,GAAG;AACN,GAAG,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrB,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;AAClC,GAAG,GAAG;AACN,GAAG,MAAM,CAAC;AACV,EAAE,EAAE,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,eAAe,GAAG;AACtF,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,GAAG,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE;AAClC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;AACV,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,eAAe,GAAG;AACtF,EAAE,CAAC;AACH,EAAE,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC,EAAE;AACH;AACA,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,iFAAiF;AAChG;AACA,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AAC5C,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;AAChC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;AACvB,EAAE,CAAC;AACH,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;AACvB,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;AAC7B,GAAG,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACzD,IAAI,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,MAAM,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG;AAC1B,KAAK,GAAG,QAAQ,IAAI;AACpB,IAAI,GAAG,QAAQ,GAAG;AAClB,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;AACpC,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACvB,GAAG,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACzC,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,oBAAoB,CAAC,EAAE,CAAC,OAAO,IAAI;AACnF,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE;AAChC,EAAE,CAAC;AACH,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACzF,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;AACzB,IAAI,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,GAAG;AAC/E,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AACjD,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;AAC3C,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AACzC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE;AACrD,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,EAAE;AACvC,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;AACrE,IAAI,oBAAoB,GAAG;AAC3B,GAAG,GAAG;AACN,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACvB,GAAG,aAAa,CAAC,UAAU,EAAE;AAC7B,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACxB,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,oBAAoB,CAAC,EAAE,CAAC,OAAO,IAAI;AACnF,GAAG,CAAC;AACJ,GAAG,MAAM,CAAC,UAAU,CAAC;AACrB,EAAE,GAAG;AACL,CAAC,CAAC;AACF,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;;ACpHf,GAAG,CAAC,CAAC,CAAC,cAAc;AACpB;AACA,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;AACxC,EAAE;AACF,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;AACrE,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/C,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;AAC9B,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG;AACtB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG;AACtB,CAAC,EAAE;AACH;AACA,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1B,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE;AACvC,CAAC,EAAE;AACH,CAAC;AACD,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC;AAClC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACf,GAAG,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;AAClB,GAAG,QAAQ,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,EAAE;AAClD,GAAG,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE;AAChD,GAAG,MAAM,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC;AAC7C,EAAE,EAAE;AACJ,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE;AACpC,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,2EAA2E,CAAC,EAAE;AAChG;AACA,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;AACvB,EAAE,UAAU,CAAC,CAAC,CAAC,cAAc,EAAE;AAC/B,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,CAAC;AACtD,GAAG,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,kBAAkB,CAAC,GAAG,EAAE;AACtD,EAAE,CAAC;AACH,CAAC,EAAE;AACH,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;;ACnCf,GAAG,CAAC,CAAC,CAAC,cAAc;AACpB;AACA,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE;AACzE,EAAE;AACF,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;AACrD,CAAC,GAAG,CAAC;AACL,CAAC,EAAE;AACH,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/C,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;AAC9B,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;AACjC,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,uDAAuD,CAAC,EAAE;AAChG;AACA,CAAC,GAAG;AACJ,CAAC,EAAE;AACH,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;AACxD,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AACvB,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,GAAG;AACzD,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACtC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;AAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;AACV,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1E,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG;AAClD,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC;AACrE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;AAC9E,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;AAC5E,EAAE,CAAC;AACH,EAAE;AACF,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5D,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI;AACnD,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjB,EAAE,GAAG;AACL,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjB,EAAE,GAAG;AACL,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AACnE,GAAG,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG;AACpC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO;AACjD,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,GAAG,GAAG,OAAO,GAAG;AAChB,EAAE,IAAI,CAAC,eAAe,GAAG;AACzB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE;AAChF,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,GAAG;AAC7C,CAAC,EAAE;AACH;AACA,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,CAAC,aAAa,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;AACrG,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC;AAC9C,EAAE,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC;AAC7D,EAAE,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC;AAC1D,EAAE,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC;AAC1D;AACA,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;AACnE,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;AACtD,GAAG,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AACzC,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE;AAC5B,GAAG,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;AACvB,GAAG,aAAa,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AAChE,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE;AAC/B,GAAG,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;AAClB,EAAE,KAAK;AACP,CAAC,EAAE;AACH;AACA,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AACvC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;AACtD,EAAE,GAAG,CAAC,CAAC;AACP,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;AACvC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;AACrC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACjB,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM;AAC9E,EAAE,CAAC;AACH,CAAC,EAAE;AACH;AACA,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AACvC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;AACtD,EAAE,GAAG,CAAC,CAAC;AACP,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;AACvC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;AACrC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACjB,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM;AAC7E,EAAE,CAAC;AACH,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC;AAChG,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAC/F,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC;AAClB,CAAC,EAAE;AACH,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1D,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC3B,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;AACtB,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG;AAClB,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACtB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACrC,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG;AACjC,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG;AAC1C,GAAG,CAAC;AACJ,GAAG,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE;AACnC,EAAE,EAAE;AACJ,CAAC,EAAE,CAAC;AACJ;AACA,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,+EAA+E,CAAC,EAAE;AAChG;AACA,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC;AACzF,CAAC,aAAa,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC;AAC5D,CAAC,EAAE;AACH,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;AAChC,GAAG,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACjE,IAAI,MAAM,CAAC,IAAI,CAAC;AAChB,GAAG,GAAG;AACN,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,MAAM;AACpD,CAAC,EAAE;AACH;AACA,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;AAClC,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AACjC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC;AACpE,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7D,KAAK,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,KAAK,CAAC,KAAK;AACpF,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;AACvD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACjD,KAAK,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AAC5D,IAAI,GAAG;AACP,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,KAAK,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;AAC5B,IAAI,IAAI,OAAO,GAAG;AAClB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC3B,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC;AACzE,GAAG,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE;AACtD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;AAC1F,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;AAC7B,MAAM,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE;AAC9B,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG;AAChB,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAChB,MAAM,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG;AACtD,KAAK,CAAC;AACN,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAChB,MAAM,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG;AACxD,KAAK,CAAC;AACN,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAChB,MAAM,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG;AACxD,KAAK,CAAC;AACN,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG;AAC5B,IAAI,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK;AACnD,GAAG,EAAE;AACL,EAAE,CAAC;AACH,CAAC,EAAE;AACH;AACA,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3C,EAAE,MAAM,CAAC,CAAC;AACV,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;AACpB,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AAChB,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACzD,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;AACpB,GAAG,GAAG;AACN,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG;AAChC,GAAG,GAAG;AACN,GAAG,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,IAAI,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI;AACrE,GAAG,GAAG,QAAQ,EAAE;AAChB,EAAE,EAAE;AACJ,CAAC,EAAE;AACH;AACA,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AACjC,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO;AAC7E,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,GAAG;AACtC,CAAC,EAAE;AACH;AACA,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;AACrC,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC;AACxB,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxF,IAAI,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAClF,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE;AAClC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE;AACpC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AACrC,CAAC,EAAE;AACH;AACA,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3B,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AAChB,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AAClC,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5D,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE;AAC/C,EAAE,GAAG;AACL,CAAC,EAAE;AACH;AACA,CAAC,EAAE,CAAC,SAAS,CAAC,kFAAkF;AAChG;AACA,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;AACvB,EAAE,UAAU,CAAC,CAAC,CAAC,cAAc,EAAE;AAC/B,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,CAAC;AACtD,GAAG,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,kBAAkB,CAAC,GAAG,EAAE;AACtD,EAAE,CAAC;AACH,CAAC,EAAE;AACH,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,cAAc;AAC7B;;;ACxMA,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;AAChB,CAAC;AACD,EAAE,CAAC;AACH,CAAC;AACD,EAAE;;ACJF,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ;AAC/B;AACA,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;AACpG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAC3E;AACA,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;AACjF,EAAE;AACF,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACnF,CAAC,MAAM,CAAC,CAAC;AACT,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;AACX,EAAE;AACF,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACrD,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,EAAE,GAAG;AACL;AACA,EAAE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,GAAG,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACpD,EAAE,EAAE;AACJ,CAAC,EAAE;AACH;;ACnBA,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ;AAC/B;AACA,EAAE;AACF,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACrD,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC/F,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC/H;AACA,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE;AAC3D,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK;AAC1B,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;AAC3B,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE;AACnI,EAAE,CAAC;AACH,EAAE,IAAI,CAAC;AACP,GAAG,MAAM,CAAC,CAAC,CAAC;AACZ,EAAE,CAAC;AACH,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE;AAC9C,EAAE,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG;AACtG,EAAE,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,IAAI;AAChD,EAAE,kBAAkB,CAAC,CAAC,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,qBAAqB,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC;AAClJ,EAAE,MAAM,CAAC,kBAAkB,CAAC;AAC5B,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE;AAC9C,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACvL,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE;AAClD,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG;AAC/E,EAAE;AACF,EAAE,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACvC,EAAE,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC;AACjH;AACA,EAAE,MAAM,CAAC,iBAAiB,CAAC;AAC3B,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE;AACzC,EAAE,MAAM,CAAC,CAAC,CAAC;AACX,GAAG,sBAAsB,CAAC,CAAC,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS;AAC9H,GAAG,gBAAgB,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG;AACpM,EAAE,EAAE;AACJ,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE;AAChD,EAAE,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,GAAG,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;AACrI,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE;AAC9E,EAAE,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK;AACzC,EAAE,gBAAgB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC5C,EAAE,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,KAAK;AAC/C;AACA,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;AACnG,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC;AACrK,EAAE,MAAM,CAAC,CAAC;AACV,GAAG,sBAAsB,CAAC,CAAC,CAAC,sBAAsB,CAAC,gBAAgB,EAAE,CAAC;AACtE,GAAG,gBAAgB,CAAC,CAAC,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;AACnE,EAAE,EAAE;AACJ,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE;AACpC,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK;AAC1B,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE;AAC1H,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE;AAC9E,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC;AACtI,EAAE,GAAG,CAAC,sCAAsC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,yBAAyB,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,8BAA8B,CAAC,KAAK,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC,IAAI;AACnO;AACA,EAAE,sCAAsC,CAAC,CAAC,CAAC,sCAAsC,CAAC,MAAM,EAAE,yBAAyB,CAAC,CAAC,EAAE,CAAC,mBAAmB,CAAC,yBAAyB,CAAC,QAAQ,CAAC,cAAc,GAAG;AAChM,EAAE,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE;AACtD,EAAE,MAAM,CAAC,sCAAsC,CAAC,CAAC,EAAE,QAAQ,CAAC;AAC5D,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE;AAC5E;AACA,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;AACzD;AACA,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;AAC1D,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK;AACvF,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,GAAG,EAAE;AACpC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AAC9C;AACA,EAAE,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE;AACrD,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,cAAc,CAAC,CAAC,EAAE,CAAC,8BAA8B,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,GAAG;AAC7G,EAAE,GAAG;AACL;AACA,EAAE,MAAM,CAAC;AACT,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AACZ,GAAG,QAAQ,CAAC,CAAC,OAAO,CAAC,sBAAsB,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE;AAC7E,GAAG,OAAO,CAAC,CAAC,eAAe;AAC3B,EAAE,EAAE;AACJ,CAAC,EAAE;AACH;AACA,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,CAAC,8BAA8B,CAAC;AACtE;AACA,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK;AACrB;;AClGA,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;AACtB,CAAC,MAAM,CAAC,OAAO,CAAC;AAChB,CAAC","file":"ludorum-player-cbr.js","sourcesContent":["/** Package wrapper and layout.\n*/\nfunction __init__(base, Sermat, ludorum) { \"use strict\";\n// Import synonyms. ////////////////////////////////////////////////////////////////////////////////\n\tvar declare = base.declare,\n\t\tunimplemented = base.objects.unimplemented,\n\t\traise = base.raise,\n\t\traiseIf = base.raiseIf,\n\t\tRandomness = base.Randomness,\n\t\tIterable = base.Iterable,\n\t\titerable = base.iterable,\n\t\tFuture = base.Future;\n\n// Library layout. /////////////////////////////////////////////////////////////////////////////////\n\tvar exports = {\n\t\t__package__: 'ludorum-player-cbr',\n\t\t__name__: 'ludorum_player_cbr',\n\t\t__init__: __init__,\n\t\t__dependencies__: [base, Sermat, ludorum],\n\t\t__SERMAT__: { include: [base, ludorum] },\n\n\t\tdbs: { /* Namespace for different types of case bases. */ },\n\t\tutils: { /* Namespace for different utility functions and definitions. */ },\n\t\tencodings: { /* Namespace for different game encodings. */ }\n\t};\n","/** # CaseBase \n\nA `CaseBase` holds all cases for a game.\n*/\nvar CaseBase = exports.CaseBase = base.declare({\n\tconstructor: function CaseBase(params) {\n\t\tthis.game = params && params.game;\n\t\tif (params && typeof params.encoding === 'function') {\n\t\t\tthis.encoding = params.encoding;\n\t\t}\n\t\tif (params && typeof params.distance === 'function') {\n\t\t\tthis.distance = params.distance;\n\t\t}\n\t\tif (params && typeof params.actionDecoding === 'function') {\n\t\t\tthis.actionDecoding = params.actionDecoding;\n\t\t}\n\t\tthis.random = params && params.random || Randomness.DEFAULT;\n\t},\n\n\t/** The `encoding` of a case takes a `game` state and the `moves` performed and returns an \n\tobjects with the following data:\n\t\n\t+ `features`: An array of integer values that identify with the game state,\n\n\t+ `actions`: An array with one value per player, an integer identifying an action if the player\n\tis active, or `null` if the player has not moved.\n\t*/\n\tencoding: unimplemented('CaseBase', 'encoding(game, moves, ply)'),\n\n\t/** ## Distances ########################################################################### */\n\n\t/** The default `distance` is a form of Manhattan distance, which does not count `null` or \n\t`NaN` features.\n\t*/\n\tdistance: function distance(features1, features2) {\n\t\treturn base.Iterable.zip(features1, features2).mapApply(function (f1, f2) {\n\t\t\tif (f1 !== null && !isNaN(f1) && f2 !== null && !isNaN(f2)) {\n\t\t\t\treturn Math.abs(f1 - f2);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}).sum();\n\t},\n\n\t/** ## Case acquisition #################################################################### */\n\n\t/** Adding a case to the database is not implemented by default.\n\t*/\n\taddCase: unimplemented('CaseBase', 'addCase(_case)'),\n\n\t/** The `addMatch` method runs the given `match` and adds all its game states as cases in the\n\tdatabase. It returns a promise.\n\t*/\n\taddMatch: function addMatch(match, options) {\n\t\tvar cdb = this,\n\t\t\tretainThreshold = +options.retainThreshold || 0;\n\t\treturn match.run().then(function () {\n\t\t\tvar result = match.result(),\n\t\t\t\thistory = match.history,\n\t\t\t\tentry, _case, breakStoring;\n\t\t\tcdb.game.players.forEach(function (p) {\n\t\t\t\tresult[p] = [\n\t\t\t\t\tresult[p] > 0 ? 1 : 0,\n\t\t\t\t\tresult[p] === 0 ? 1 : 0,\n\t\t\t\t\tresult[p] < 0 ? 1 : 0,\n\t\t\t\t];\n\t\t\t});\n\t\t\tfor (var i = history.length - 1; i >= 0; i--) {\n\t\t\t\tentry = history[i];\n\t\t\t\tif (entry.moves) {\n\t\t\t\t\t_case = cdb.encoding(entry.state, entry.moves, i);\n\t\t\t\t\t_case.result = result;\n\t\t\t\t\tbreakStoring = retainThreshold !== 0 &&\n\t\t\t\t\t\tretainThreshold > cdb.closestDistance(entry.state);\n\t\t\t\t\tcdb.addCase(_case);\n\t\t\t\t\tif (breakStoring) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn match;\n\t\t});\n\t},\n\n\t/** The `addMatches` method takes a sequence of `matches`, runs each in order and adds all \n\tresulting game states to the database. It returns a promise.\n\t*/\n\taddMatches: function addMatches(matches, options) {\n\t\tvar cdb = this,\n\t\t\tmatchCount = 0,\n\t\t\tintervalId = 0;\n\t\tif (options.logger) {\n\t\t\tintervalId = setInterval(function () {\n\t\t\t\toptions.logger.info(\"Added \"+ matchCount +\" matches.\");\n\t\t\t}, options.logTime || 30000);\n\t\t}\n\t\treturn Future.sequence(matches, function (match) {\n\t\t\tmatchCount++;\n\t\t\treturn cdb.addMatch(match, options);\n\t\t}).then(function (r) {\n\t\t\tif (options.logger) {\n\t\t\t\toptions.logger.info(\"Added \"+ matchCount +\" matches.\");\n\t\t\t}\n\t\t\tclearInterval(intervalId);\n\t\t\treturn r;\n\t\t});\n\t},\n\n\t/** The `populate` method adds cases to the database by running several matches and adding the\n\tresulting game states. The `options` argument may include the following:\n\n\t+ `game`: The game state from which to start the matches. The database's `game` is used by \n\tdefault.\n\n\t+ `n`: The number of matches to run; 100 by default.\n\n\t+ `trainer`: The player to use agains the opponents. A random player is used by default.\n\n\t+ `players`: The trainer's opponents to use to play the matches. The trainer is used by default.\n\n\tOther options are passed to the `addMatches` method. The result is a promise.\n\t*/\n\tpopulate: function populate(options) {\n\t\toptions = options || {};\n\t\tvar cdb = this,\n\t\t\tgame = options.game || this.game,\n\t\t\tn = isNaN(options.n) ? 100 : +options.n,\n\t\t\ttrainer = options.trainer || new ludorum.players.RandomPlayer({ name: 'RandomPlayer' }),\n\t\t\tplayers = options.players || [trainer];\n\t\tif (!Array.isArray(players)) {\n\t\t\tplayers = [players];\n\t\t}\n\t\tvar tournament = new ludorum.tournaments.Measurement(game, trainer, players, 1),\n\t\t\tmatchups = tournament.__matches__().toArray();\n\t\treturn this.addMatches(Iterable.range(Math.ceil(n / matchups.length))\n\t\t\t.product(matchups)\n\t\t\t.mapApply(function (i, match) {\n\t\t\t\treturn new ludorum.Match(game, match.players);\n\t\t\t}), options);\n\t},\n\n\t/** ## Database use ######################################################################## */\n\n\t/** The `cases` method returns the sequence of all cases in the database. Case order is not\n\tdefined.\n\t*/\n\tcases: unimplemented('CaseBase', 'cases(filters)'),\n\n\t/** The `nn` method returns the `k` neareast neighbours of the given game state. \n\t*/\n\tnn: function nn(k, game) {\n\t\tvar cb = this,\n\t\t\tgameCase = this.encoding(game),\n\t\t\tcs = iterable(this.cases()).map(function (_case) {\n\t\t\t\treturn [_case, cb.distance(_case.features, gameCase.features)];\n\t\t\t}).sorted(function (c1, c2) {\n\t\t\t\treturn c1[1] - c2[1];\n\t\t\t}).toArray();\n\t\treturn cs.slice(0, +k);\n\t},\n\n\t/** The `closestDistance` method returns the distance to the closest case in the case base from\n\tthe given game state.\n\t*/\n\tclosestDistance: function closestDistance(game) {\n\t\tvar closest = this.nn(1, game);\n\t\treturn closest.length === 0 ? Infinity : closest[0][1];\n\t},\n\n\t/**TODO\n\t*/\n\tactionEvaluations: function actionEvaluations(game, role, options) {\n\t\tvar cb = this,\n\t\t\tk = options && +options.k || 10,\n\t\t\troleIndex = game.players.indexOf(role),\n\t\t\tr = base.iterable(game.moves()[role]).map(function (move) {\n\t\t\t\treturn [JSON.stringify(move), [move, 0]];\n\t\t\t}).toObject(),\n\t\t\tknn = cb.nn(k, game);\n\t\titerable(knn).forEachApply(function (_case, distance) {\t\t\t\n\t\t\tvar m = r[JSON.stringify(_case.actions[roleIndex])],\n\t\t\t\tresult = _case.result[role],\n\t\t\t\tev, support, ratio;\n\t\t\tif (m) {\n\t\t\t\tsupport = _case.count / (10 + _case.count);\n\t\t\t\tratio = (result[0] + result[2] && \n\t\t\t\t\t((result[0] - result[2]) / (result[0] + result[2])));\n\t\t\t\tev = support * ratio * (1 / (1 + distance));\n\t\t\t\tif (isNaN(ev)) {\n\t\t\t\t\traise(\"Action evaluation is NaN for case: \", JSON.stringify(_case),\n\t\t\t\t\t\t\" (distance= \", distance, \")!\");\n\t\t\t\t}\n\t\t\t\tm[1] += ev;\n\t\t\t}\n\t\t});\n\t\t//console.log(Object.values(r));\n\t\treturn Object.values(r);\n\t},\n\n\t/**TODO\n\t*/\n\tgameEvaluation: function gameEvaluation(game, role, options) { //FIXME\n\t\tvar cb = this,\n\t\t\tk = options && +options.k || 10,\n\t\t\tr = base.iterable(game.moves()[role]).map(function (move) {\n\t\t\t\treturn [JSON.stringify(move), [move, 0]];\n\t\t\t}).toObject(),\n\t\t\tknn = cb.nn(k, game, role);\n\t\treturn iterable(knn).map(function (_case, distance) {\n\t\t\treturn (_case.result[role][0] - _case.result[role][2]) / (1 + distance);\n\t\t}).sum();\n\t},\n\n\t/** ## Utilities ########################################################################### */\n\n\t'static __SERMAT__': {\n\t\tidentifier: 'CaseBase',\n\t\tserializer: function serialize_CaseBase(obj) { //FIXME\n\t\t\treturn [{\n\t\t\t\tgame: obj.game,\n\t\t\t\tencoding: obj.hasOwnProperty('encoding') ? obj.encoding : null\n\t\t\t}];\n\t\t}\n\t},\n}); // declare CaseBase","/** # CBR Player \n\n*/\nvar CBRPlayer = exports.CBRPlayer = base.declare(ludorum.Player, {\n\t/** \n\t*/\n\tconstructor: function CBRPlayer(params) {\n\t\tludorum.Player.call(this, params);\n\t\tthis.caseBase = params && params.caseBase;\n\t\tthis.k = params && params.k || 20;\n\t},\n\n\t/** \n\t*/\n\tcheckMoves: function checkMoves(game, role) {\n\t\tvar r = [[], []];\n\t\tthis.movesFor(game, role).forEach(function (move) {\n\t\t\tvar game2 = game.perform(move, role),\n\t\t\t\tresult = game2.result();\n\t\t\tif (!result) {\n\t\t\t\tr[1].push(move); // Not a losing move.\n\t\t\t} else if (result[role] > 0) {\n\t\t\t\tr[0].push(move); // Winning move.\n\t\t\t}\n\t\t});\n\t\treturn r;\n\t},\n\n\t/** A `CBRPlayer` takes the action evaluations from the case base, and splits them into actions\n\twith possitive evaluations and the ones with evaluations less than or equal to zero. If there\n\tare possitively evaluated actions, one of these is chosen randomly with a probability \n\tproportional to the evaluation. If all actions have non possitive evaluations, one of these is\n\tchosen with a probability inversely proportional to the evaluation.   \n\t*/\n\tdecision: function decision(game, role) {\n\t\tvar checkMoves = this.checkMoves(game, role);\n\t\tif (checkMoves[0].length > 0) {\n\t\t\treturn this.random.choice(checkMoves[0]);\n\t\t} else if (checkMoves[1].length < 2) {\n\t\t\tif (checkMoves[1].length === 1) {\n\t\t\t\treturn checkMoves[1][0];\n\t\t\t} else { // if (checkMoves[1].length < 1)\n\t\t\t\treturn this.random.choice(this.movesFor(game, role));\n\t\t\t}\n\t\t}\n\t\tvar actions = iterable(checkMoves[1]).map(function (action) {\n\t\t\t\treturn [action +'', [action, 0]];\n\t\t\t}).toObject();\n\t\tthis.caseBase.actionEvaluations(game, role, { k: this.k }).forEach(function (t) {\n\t\t\tvar entry = actions[t[0] +''];\n\t\t\tif (entry) {\n\t\t\t\tentry[1] += t[1];\n\t\t\t}\n\t\t});\n\t\tvar minEval = +Infinity,\n\t\t\tpositiveActions = Object.values(actions).filter(function (t) {\n\t\t\t\tminEval = Math.min(minEval, t[1]);\n\t\t\t\treturn t[1] > 0;\n\t\t\t}),\n\t\t\tnegativeActions = Object.values(actions).filter(function (t) {\n\t\t\t\treturn t[1] <= 0;\n\t\t\t}).map(function (t) {\n\t\t\t\treturn [t[0], t[1] - minEval];\n\t\t\t}),\n\t\t\tresult;\n\t\tif (positiveActions.length > 1) {\n\t\t\tresult = this.random.weightedChoice(this.random.normalizeWeights(positiveActions));\n\t\t} else if (positiveActions.length === 1) {\n\t\t\tresult = positiveActions[0][0];\n\t\t} else {\n\t\t\tresult = this.random.weightedChoice(this.random.normalizeWeights(negativeActions));\n\t\t}\n\t\treturn result;\n\t},\n\n\t// Utilities. /////////////////////////////////////////////////////////////////////////////////\n\n\tassess: function assess(players, options) {\n\t\tif (!Array.isArray(players)) {\n\t\t\tplayers = [players];\n\t\t}\n\t\tvar cbrPlayer = this,\n\t\t\tgame = this.caseBase.game,\n\t\t\tevaluation = iterable(players).map(function (player) {\n\t\t\t\treturn [player.name, iterable(game.players).map(function (p) {\n\t\t\t\t\t\treturn [p, [0,0,0]];\n\t\t\t\t\t}).toObject()];\n\t\t\t\t}).toObject(),\n\t\t\tn = options && +options.n || 300,\n\t\t\tfinishedMatchesCount = 0,\n\t\t\tintervalId = 0;\n\t\tif (options.logger) {\n\t\t\tintervalId = setInterval(function () {\n\t\t\t\toptions.logger.info(\"Assessment finished \"+ finishedMatchesCount +\" matches.\");\n\t\t\t}, options.logTime || 30000);\n\t\t}\n\t\treturn base.Future.sequence(base.Iterable.range(n).product(players), function (tuple) {\n\t\t\tvar player = tuple[1],\n\t\t\t\tmatchPlayers = base.Iterable.repeat(player, game.players.length).toArray(),\n\t\t\t\tplayerIndex = tuple[0] % game.players.length,\n\t\t\t\tplayerRole = game.players[playerIndex];\n\t\t\tmatchPlayers[playerIndex] = cbrPlayer;\n\t\t\tvar match = new ludorum.Match(game, matchPlayers);\n\t\t\treturn match.run().then(function () {\n\t\t\t\tvar r = match.result()[playerRole];\n\t\t\t\tevaluation[player.name][playerRole][r > 0 ? 0 : r < 0 ? 2 : 1]++;\n\t\t\t\tfinishedMatchesCount++;\n\t\t\t});\n\t\t}).then(function () {\n\t\t\tclearInterval(intervalId);\n\t\t\tif (options.logger) {\n\t\t\t\toptions.logger.info(\"Assessment finished \"+ finishedMatchesCount +\" matches.\");\n\t\t\t}\n\t\t\treturn evaluation;\n\t\t});\n\t}\n}); // declare CBRPlayer","/** # MemoryCaseBase\n\nA memory implementation of a `CaseBase`.\n*/\nvar MemoryCaseBase = exports.dbs.MemoryCaseBase = declare(CaseBase, {\n\tconstructor: function MemoryCaseBase(params) {\n\t\tCaseBase.call(this, params);\n\t\tthis.__cases__ = [];\n\t\tthis.__index__ = {};\n\t},\n\n\tcases: function cases() {\n\t\treturn base.iterable(this.__cases__);\n\t},\n\t\n\taddCase: function addCase(_case) {\n\t\t//TODO Check `_case` properties.\n\t\tvar entry = {\n\t\t\tcount: _case.count || 0,\n\t\t\tply: _case.ply,\n\t\t\tfeatures: Sermat.clone(_case.features || null),\n\t\t\tactions: Sermat.clone(_case.actions || null),\n\t\t\tresult: Sermat.clone(_case.result || null)\n\t\t};\n\t\treturn this.__cases__.push(entry);\n\t},\n\n\t/** ## Utilities ########################################################################### */\n\n\t'static __SERMAT__': {\n\t\tidentifier: 'MemoryCaseBase',\n\t\tserializer: function serialize_MemoryCaseBase(obj) {\n\t\t\treturn CaseBase.__SERMAT__.serialize_CaseBase(obj);\n\t\t}\n\t},\n}); // declare MemoryCaseBase","/** # SQLiteCaseBase\n\nAn implementation of a `CaseBase` using SQLite3 through `better-sqlite3`.\n*/\nexports.dbs.SQLiteCaseBase = base.declare(CaseBase, {\n\t/** \n\t*/\n\tconstructor: function SQLiteCaseBase(params) {\n\t\tCaseBase.call(this, params);\n\t\tthis.__setupDatabase__(params);\n\t},\n\n\t/** ## Database setup and management ####################################################### */\n\n\t/**\n\t*/\n\t__setupDatabase__: function __setupDatabase__(params) {\n\t\tvar game = this.game,\n\t\t\tDatabase = this.Database || require('better-sqlite3');\n\t\tif (params.db instanceof Database) {\n\t\t\tthis.__db__ = params.db;\n\t\t} else {\n\t\t\tthis.__db__ = new Database(typeof params.db === 'string' ? params.db : \n\t\t\t\t'./'+ game.name.toLowerCase() +'-cbr.sqlite');\n\t\t\tthis.__db__.pragma('journal_mode = OFF'); // Disable transactions.\n\t\t\tthis.__db__.pragma('cache_size = -128000'); // Increase default cache size.\n\t\t\tthis.__db__.pragma('encoding = \"UTF-8\"'); // Increase default cache size.\n\t\t}\n\t\t\n\t\tthis.__tableName__ = params.tableName || 'CB_'+ game.name;\n\t\tvar encoding = this.encoding(game, game.moves());\n\t\tthis.__featureColumns__ = encoding.features.map(function (_, i) {\n\t\t\treturn 'f'+ i;\n\t\t});\n\t\tthis.__actionColumns__ = game.players.map(function (_, i) {\n\t\t\treturn 'a'+ i;\n\t\t});\n\t\tthis.__resultColumns__ = base.Iterable.range(game.players.length)\n\t\t\t.product(['won', 'tied', 'lost'])\n\t\t\t.mapApply(function (p, rt) { // result columns\n\t\t\t\treturn rt + p;\n\t\t\t}).toArray();\n\t\tthis.__createTable__();\n\t\tthis.__db__.register({ name: 'distance', deterministic: true, varargs: true },\n\t\t\tthis.__distanceFunction__(this.distance));\n\t},\n\n\t__createTable__: function __createTable__(tableName, featureColumns, actionColumns, resultColumns) {\n\t\ttableName = tableName || this.__tableName__;\n\t\tfeatureColumns = featureColumns || this.__featureColumns__;\n\t\tactionColumns = actionColumns || this.__actionColumns__;\n\t\tresultColumns = resultColumns || this.__resultColumns__;\n\n\t\treturn this.__runSQL__('CREATE TABLE IF NOT EXISTS '+ tableName +\n\t\t\t'(key TEXT PRIMARY KEY, count INTEGER, ply REAL, '+\n\t\t\tactionColumns.map(function (colName) {\n\t\t\t\treturn colName +' TEXT';\n\t\t\t}).join(', ') +', '+\n\t\t\tresultColumns.concat(featureColumns).map(function (colName) {\n\t\t\t\treturn colName +' INTEGER';\n\t\t\t}).join(', ') +\n\t\t')');\n\t},\n\n\t__runSQL__: function __runSQL__(sql) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\ttry {\n\t\t\tvar stmt = this.__db__.prepare(sql);\n\t\t\treturn stmt.run.apply(stmt, args);\n\t\t} catch (err) {\n\t\t\tthrow new Error(\"Error executing `\"+ sql +\"` \"+ JSON.stringify(args) +\"!\");\n\t\t}\n\t},\n\n\t__getSQL__: function __getSQL__(sql) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\ttry {\n\t\t\tvar stmt = this.__db__.prepare(sql);\n\t\t\treturn stmt.all.apply(stmt, args);\n\t\t} catch (err) {\n\t\t\tthrow new Error(\"Error querying `\"+ sql +\"` \"+ JSON.stringify(args) +\"!\");\n\t\t}\n\t},\n\n\t/** The distance function of the case base is used in many SQL statements sent to the database.\n\tSince SQLite functions cannot handle arrays, a variadic form that takes both feature arrays in\n\ta chain is built.\n\t*/\n\t__distanceFunction__: function __distanceFunction__(df) {\n\t\tdf = df || this.distance;\n\t\tvar features1 = [], \n\t\t\tfeatures2 = [];\n\t\treturn function () {\n\t\t\tvar middle = (arguments.length / 2) |0;\n\t\t\tfor (var i = 0; i < middle; i++) {\n\t\t\t\tfeatures1.push(arguments[i]);\n\t\t\t\tfeatures2.push(arguments[middle + i]);\n\t\t\t}\n\t\t\treturn df(features1, features2);\n\t\t};\n\t}, \n\n\t/** ## Cases ############################################################################### */\n\n\t/** The cases table's primary key is a string that identifies the case. By default, the \n\tconcatenation of feature values and actions values is used.\n\t*/\n\t__key__: function __key__(_case) {\n\t\tvar features = _case.features,\n\t\t\tactions = _case.actions || this.game.players.map(function () {\n\t\t\t\treturn null;\n\t\t\t});\n\t\treturn features.join(',') +':'+ actions.join(',');\n\t},\n\n\taddCase: function addCase(_case) {\n\t\tvar players = this.game.players,\n\t\t\tcaseKey = this.__key__(_case),\n\t\t\tsql = 'INSERT OR IGNORE INTO '+ this.__tableName__ +' VALUES ('+ \n\t\t\t\tIterable.repeat('?', 3 + this.__actionColumns__.length + \n\t\t\t\t\tthis.__resultColumns__.length + this.__featureColumns__.length).join(',') +')',\n\t\t\tisNew = this.__runSQL__(sql, [caseKey, 1, _case.ply]\n\t\t\t\t.concat(_case.actions.map(function (action) {\n\t\t\t\t\treturn action === null ? null : JSON.stringify(action);\n\t\t\t\t}))\n\t\t\t\t.concat(Iterable.chain.apply(Iterable, players.map(function (p) {\n\t\t\t\t\treturn _case.result[p];\n\t\t\t\t})).toArray())\n\t\t\t\t.concat(_case.features)\n\t\t\t).changes > 0;\n\t\tif (!isNew) { // Insert was ignored because the case is already stored.\n\t\t\tthis.__runSQL__('UPDATE '+ this.__tableName__ +' '+\n\t\t\t\t'SET count = count + 1, ply = (ply * count + '+ (_case.ply || 0) +') / (count + 1), '+\n\t\t\t\tplayers.map(function (p) {\n\t\t\t\t\tvar r = _case.result[p],\n\t\t\t\t\t\tpi = players.indexOf(p),\n\t\t\t\t\t\tsets = [];\n\t\t\t\t\tif (r[0]) {\n\t\t\t\t\t\tsets.push('won'+ pi +' = won'+ pi +' + '+ r[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (r[1]) {\n\t\t\t\t\t\tsets.push('tied'+ pi +' = tied'+ pi +' + '+ r[1]);\n\t\t\t\t\t}\n\t\t\t\t\tif (r[2]) {\n\t\t\t\t\t\tsets.push('lost'+ pi +' = lost'+ pi +' + '+ r[2]);\n\t\t\t\t\t}\n\t\t\t\t\treturn sets.join(', ');\n\t\t\t\t}).join(', ') +' WHERE key = \\''+ caseKey +'\\''\n\t\t\t);\n\t\t}\n\t},\n\n\t__row2case__: function __row2case__(row) {\n\t\treturn {\n\t\t\tcount: row.count,\n\t\t\tply: row.ply,\n\t\t\tfeatures: this.__featureColumns__.map(function (col) {\n\t\t\t\treturn row[col];\n\t\t\t}),\n\t\t\tactions: this.__actionColumns__.map(function (col) {\n\t\t\t\treturn JSON.parse(row[col]);\n\t\t\t}),\n\t\t\tresult: iterable(this.game.players).map(function (player, i) {\n\t\t\t\treturn [player, [row['won'+ i], row['tied'+ i], row['lost'+ i]]];\n\t\t\t}).toObject()\n\t\t};\n\t},\n\n\tcases: function cases(filters) {\n\t\treturn this.__getSQL__('SELECT * FROM '+ this.__tableName__) //TODO Filters\n\t\t\t.map(this.__row2case__.bind(this));\n\t},\n\n\t__nn_sql__: function __nn_sql__(k, game) {\n\t\tvar gameCase = this.encoding(game);\n\t\treturn 'SELECT *, ('+ \n\t\t\tIterable.zip(this.__featureColumns__, gameCase.features).mapApply(function (v1, v2) {\n\t\t\t\treturn v2 !== null && !isNaN(v2) ? 'abs(ifnull('+ v1 +'-('+ v2 +'),0))' : '0';\n\t\t\t}).join('+') +') AS distance '+\n\t\t\t'FROM '+ this.__tableName__ +' '+\n\t\t\t'ORDER BY distance ASC LIMIT '+ k;\n\t},\n\n\tnn: function nn(k, game) {\n\t\tvar cb = this,\n\t\t\tsql = this.__nn_sql__(k, game);\n\t\treturn this.__db__.prepare(sql).all().map(function (row) {\n\t\t\treturn [cb.__row2case__(row), row.distance];\n\t\t});\n\t},\n\n\t// Utilities //////////////////////////////////////////////////////////////////////////////////\n\n\t'static __SERMAT__': {\n\t\tidentifier: 'SQLiteCaseBase',\n\t\tserializer: function serialize_SQLiteCaseBase(obj) {\n\t\t\treturn CaseBase.__SERMAT__.serialize_CaseBase(obj);\n\t\t}\n\t},\n}); // declare SQLiteCaseBase\n\n","/** # Utilities\r\n\r\n*/\r\n\r\n//TODO","/** # TicTacToe direct encoding\n\nThe `TicTacToe` encoding has 9 features, one per square in the board. Each feature has the value of \n0 if it is marked with an X, 1 if it is marked with an O, or 0.5 otherwise.\n\nTicTacToe's actions are numbers, hence no transformation or encoding is required.\n*/\nexports.encodings.TicTacToe.direct = function encodingTicTacToe(game, moves, ply) {\n\treturn {\n\t\tply: ply,\n\t\t\n\t\tfeatures: game.board.split('').map(function (chr) {\n\t\t\treturn chr === 'X' ? (+1) : chr === 'O' ? (-1) : 0; \n\t\t}),\n\n\t\tactions: !moves ? null : game.players.map(function (p) {\n\t\t\treturn moves.hasOwnProperty(p) ? moves[p] : null;\n\t\t})\n\t};\n};","/** # TicTacToe direct encoding\n\n*/\nexports.encodings.TicTacToe.abstract = (function () {\n\tvar posibleLines = [ [0,3,6], [0,4,8], [0,1,2], [1,4,7], [2,4,6], [2,5,8], [3,4,5], [8,7,6] ];\n\tvar adyacents = [ [1,4,3], [0,3,4,5,2], [1,4,5], [0,1,4,7,6], [0,1,2,3,5,6,7,8], [1,2,4,7,8], [3,4,7], [6,3,4,5,8], [7,4,5] ];\n\n\tvar getFreeAdyacentsCountPerCell = function(board, index){\n\t\tboard = board.split('');\n\t\tif(board[index] === '_'){\n\t\t\treturn adyacents[index].map((cellIndex) => board[cellIndex] === '_' ? 1 : 0).reduce((acumulator,current) => acumulator+current);\n\t\t}\n\t\telse{\n\t\t\treturn 0;\n\t\t}\n\t};\n\n\tvar totalFreeAdyacentCount = function(board){\n\t\tvar adyacentsCountPerCell = [...Array(9).keys()].map((i) => getFreeAdyacentsCountPerCell(board, i));\n\t\tvar totalAdyacentCount = [...Array(9).keys()];\n\t\ttotalAdyacentCount = totalAdyacentCount.map((x) => adyacentsCountPerCell.filter((adyacentCount) => adyacentCount == x ? true : false).length );\t\n\t\treturn totalAdyacentCount;\n\t};\n\n\tvar lineLength = function(board,player,line){\n\t\treturn line.reduce( (acumulator,current) => (board[acumulator]==-1) ? -1 : (board[current]===player) ? acumulator = acumulator + 1 : (board[current] === '_') ? acumulator : -1 , 0);\n\t};\n\n\tvar getLinesLengthCount = function(board,player){\n\t\tvar linesLenght = posibleLines.map( (line) => lineLength(board,player,line));\n\t\t\n\t\tvar linesOfEachLenght = [-1,0,1,2,3];\n\t\tlinesOfEachLenght = linesOfEachLenght.map((x) => linesLenght.filter((lineLength) => lineLength == x).length );\t\n\n\t\treturn linesOfEachLenght;\n\t};\n\n\tvar getFeature = function(board,player){\n\t\treturn { \n\t\t\ttotalFreeAdyacentCount : totalFreeAdyacentCount(board), //Array from 0 to 8 indicating how many cells have i free adyacents\n\t\t\tlinesLenghtcount : getLinesLengthCount(board,player) //Array from 0 to 4, indicating 0: lines bloqued, 1: lines with all cell free, 2: lines with 1 own, 3: lines with 2 own, 4: lines with 3 own\n\t\t};\n\t};\n\n\tvar posibleLinesWithCell = function(cellIndex){\n\t\treturn posibleLines.filter((line) => line.reduce((acumulator,current) =>  acumulator = acumulator || current===cellIndex, false) );\n\t};\n\n\tvar concreteActionToAbstractAction = function(board, player, concreteAction){\n\t\tvar hipoteticalBoard = board.split('');\n\t\thipoteticalBoard[concreteAction] = player;\n\t\thipoteticalBoard = hipoteticalBoard.join('');\n\n\t\t//La idea es que la action es como si fuera una feature, le digo \"estabas asa? ahora quedate asi\"\n\t\t//El problema que tengo que verificar es que no se si esta funcion es biyectiva, no se cumple que siempre que tengo un estado asa, lo puedo llevar a un estado asi,\n\t\treturn {\n\t\t\ttotalFreeAdyacentCount : totalFreeAdyacentCount(hipoteticalBoard), \n\t\t\tlinesLenghtcount : getLinesLengthCount(hipoteticalBoard,player) \n\t\t};\n\t};\n\n\tvar getFreeCells = function(board){\n\t\tboard = board.split('');\n\t\treturn board.map((cell,i) => ({index:i, content: cell})).filter((cell) => cell.content==='_').map((cell) => cell.index);\n\t};\n\n\tvar abstractActionToConcreteAction = function(board, player, abstractAction){\n\t\t//Ahora es horrible, porque me estoy dando cuenta que tengo que ver todas mis concrete actions y ver cual es como mi abstractAction\t\n\t\tvar hipoteticalAbstractActionsForFreeCells = getFreeCells(board).map((hipoteticalConcreteAction) => ({concrete: hipoteticalConcreteAction, abstract : concreteActionToAbstractAction(board,player,hipoteticalConcreteAction) }));\n\n\t\thipoteticalAbstractActionsForFreeCells = hipoteticalAbstractActionsForFreeCells.filter((hipoteticalAbstractAction) => sameAbstractActions(hipoteticalAbstractAction.abstract,abstractAction));\n\t\tconsole.log(hipoteticalAbstractActionsForFreeCells);\n\t\treturn hipoteticalAbstractActionsForFreeCells[0].concrete;\n\t};\n\n\tvar sameAbstractActions = (a,b) => JSON.stringify(a) === JSON.stringify(b);\n\n\tvar playerConverter = (player) => player.substring(0,1);\n\n\tvar encodingTicTacToeAbstract = function(game,moves,ply){\n\t\t//The game uses Xs and Os for players, we need them to match the simbols in the board\n\t\tvar player = playerConverter(ply);\n\t\tvar feature = getFeature(game.board,player);\n\n\t\tvar abstractActions = game.players.map(function(p){\n\t\t\treturn moves[p].map((concreteAction) => concreteActionToAbstractAction(game.board,player,concreteAction));\n\t\t});\n\n\t\treturn{\n\t\t\tply: ply,\n\t\t\tfeatures: feature.totalFreeAdyacentCount.concat(feature.linesLenghtcount),\n\t\t\tactions: abstractActions\n\t\t};\n\t};\n\n\tvar actionDecodingTicTacToeAbstract = abstractActionToConcreteAction;\n\n\treturn null; //FIXME\n})();","// See __prologue__.js\n\treturn exports;\n}\n"]}