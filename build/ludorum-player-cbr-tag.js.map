{"version":3,"sources":["../src/__prologue__.js","../src/Case.js","../src/CaseBase.js","../src/CBRPlayer.js","../src/dbs/MemoryCaseBase.js","../src/dbs/SQLiteCaseBase.js","../src/games/tictactoe.js","../src/games/risk.js","../src/utils.js","../src/__epilogue__.js"],"names":[],"mappings":"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","file":"ludorum-player-cbr-tag.js","sourcesContent":["/** Package wrapper and layout.\r\n*/\r\nfunction __init__(base, Sermat, ludorum) { \"use strict\";\r\n// Import synonyms. ////////////////////////////////////////////////////////////////////////////////\r\n\tvar declare = base.declare,\r\n\t\tunimplemented = base.objects.unimplemented,\r\n\t\traise = base.raise,\r\n\t\traiseIf = base.raiseIf,\r\n\t\tRandomness = base.Randomness,\r\n\t\tIterable = base.Iterable,\r\n\t\titerable = base.iterable,\r\n\t\tFuture = base.Future;\r\n\r\n// Library layout. /////////////////////////////////////////////////////////////////////////////////\r\n\tvar exports = {\r\n\t\t\t__package__: 'ludorum-player-cbr',\r\n\t\t\t__name__: 'ludorum_player_cbr',\r\n\t\t\t__init__: __init__,\r\n\t\t\t__dependencies__: [base, Sermat, ludorum],\r\n\t\t\t__SERMAT__: { include: [base, ludorum] },\r\n\r\n\t\t\tdbs: { /* Namespace for different types of case bases. */ },\r\n\t\t\tgames: { /* Namespace for functions and definitions for supporting games. */ }\r\n\t\t},\r\n\t\tdbs = exports.dbs,\r\n\t\tgames = exports.games\r\n\t;\r\n","/** # Case\r\n\r\nTODO\r\n*/\r\nvar Case = exports.Case = declare({\r\n\t/** The `props` argument must have:\r\n\t\r\n\t+ `count`: the amount of times this case has been seen,\r\n\t+ `ply`: a number with the average ply where this case happens,\r\n\t+ `features`: an array of numbers representing the relevant information of the case,\r\n\t+ `actions`: an object mapping players to actions,\r\n\t+ `results`: an object mapping players to a 3 number array with the counts for: victories, \r\n\tdraws and defeats.\r\n\t*/\r\n\tconstructor: function Case(props) {\r\n\t\tthis.count = +props.count || 1;\r\n\t\tthis.ply = +props.ply;\r\n\t\tthis.features = props.features;\r\n\t\tthis.actions = props.actions;\r\n\t\tthis.results = props.results;\r\n\t},\r\n\r\n\t/** The static method `fromGame` creates a case from a game state, ply number and moves\r\n\tperformed.\r\n\t*/\r\n\t'static fromGame': base.objects.unimplemented('Case', 'fromGame(game, ply, moves)'),\r\n\r\n\t/** Adding a result to a case updates the `results` property to acount for the given `result`. \r\n\t*/\r\n\taddResult: function addResult(result) {\r\n\t\tvar r;\r\n\t\tfor (var p in result) {\r\n\t\t\tr = result[p];\r\n\t\t\tif (Array.isArray(r) && r.length === 3) { // case results\r\n\t\t\t\tthis.results[p][0] += result[p][0];\r\n\t\t\t\tthis.results[p][1] += result[p][1];\r\n\t\t\t\tthis.results[p][2] += result[p][2];\r\n\t\t\t} else if (typeof r === 'number') {\r\n\t\t\t\tthis.results[p][r > 0 ? 0 : r === 0 ? 1 : 2]++;\r\n\t\t\t} else {\r\n\t\t\t\traise('Invalid result (', r, ')!');\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.count = (this.count || 0) + 1; \r\n\t},\r\n\r\n\t/** Merging `this` case with another case updates the properties `ply`, `count` and `results`.\r\n\t*/\r\n\tmerge: function merge(_case) {\r\n\t\tthis.ply = (this.ply * this.count + _case.ply * _case.count) / (this.count + _case.count);\r\n\t\tthis.count += _case.count;\r\n\t\tthis.addResult(_case.result);\r\n\t},\r\n\r\n\t/** Cases' features and actions can result from transformations and apply to several different\r\n\tgame states. The `getMove` method allows a case to adapt its action to a given game state. \r\n\t*/\r\n\tgetMove: function getMove(game, role) {\r\n\t\treturn this.actions[role];\r\n\t},\r\n\r\n\t// ## Databases ################################################################################\r\n\r\n\t/** An `identifier` for a case is a string that can be used as a primary key of a case base.\r\n\t*/\r\n\tidentifier: function identifier() {\r\n\t\treturn this.features.join(',') + JSON.stringify(this.actions);\r\n\t},\r\n\r\n\t/** Return a database record for this case.\r\n\t*/\r\n\trecord: function record(obj) {\r\n\t\tobj = obj || {};\r\n\t\tvar p;\r\n\t\tobj.id = this.identifier();\r\n\t\tobj.ply = this.ply;\r\n\t\tobj.count = this.count;\r\n\t\tthis.features.forEach(function (f, i) {\r\n\t\t\tobj['f'+ i] = f;\r\n\t\t});\r\n\t\tfor (p in this.actions) {\r\n\t\t\tobj['a_'+ p] = JSON.stringify(this.actions[p]);\r\n\t\t}\r\n\t\tfor (p in this.results) {\r\n\t\t\tobj['won_'+ p] = this.results[p][0];\r\n\t\t\tobj['tied_'+ p] = this.results[p][1];\r\n\t\t\tobj['lost_'+ p] = this.results[p][2];\r\n\t\t}\r\n\t\treturn obj;\r\n\t},\r\n\r\n\t/** The static method `fromRecord` creates a case from a database record.\r\n\t*/\r\n\t'static fromRecord': function fromRecord(record) {\r\n\t\tvar features = [],\r\n\t\t\tactions = {},\r\n\t\t\tresults = {};\r\n\t\tfor (var k in record) {\r\n\t\t\tif (k[0] === 'f') {\r\n\t\t\t\tfeatures[+k.substr(1)] = record[k];\r\n\t\t\t} else if (k.substr(0, 2) === 'a_') {\r\n\t\t\t\tactions[k.substr(2)] = JSON.parse(record[k]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var p in results) {\r\n\t\t\tresults[p] = [record['won_'+ p], record['tied_'+ p], record['lost_'+ p]];\r\n\t\t}\r\n\t\treturn new this({ \r\n\t\t\tcount: record.count,\r\n\t\t\tply: record.ply,\r\n\t\t\tfeatures: features,\r\n\t\t\tactions: actions,\r\n\t\t\tresults: results\r\n\t\t});\r\n\t},\r\n\r\n\t// ## Utilities ################################################################################\r\n\r\n\t/** `emptyResults` creates an object that maps every player to an array with 3 zeros.\r\n\t*/\r\n\t'static emptyResults': function emptyResults(players) {\r\n\t\treturn iterable(players).map(function (p) {\r\n\t\t\treturn [p, [0, 0, 0]];\r\n\t\t}).toObject();\r\n\t},\r\n\r\n\t/** This method adds null actions to a copy of the `moves` object.\r\n\t*/\r\n\t'static actionsFromMoves': function getActions(players, moves) {\r\n\t\treturn iterable(players).map(function (p) {\r\n\t\t\treturn [p, moves && moves.hasOwnProperty(p) ? moves[p] : null];\r\n\t\t}).toObject();\r\n\t},\r\n\r\n\t/** Serialization and materialization using Sermat.\r\n\t*/\r\n\t'static __SERMAT__': {\r\n\t\tidentifier: 'Case',\r\n\t\tserializer: function serialize_Case(obj) {\r\n\t\t\treturn [{\r\n\t\t\t\tcount: obj.count,\r\n\t\t\t\tply: obj.ply,\r\n\t\t\t\tfeatures: obj.features,\r\n\t\t\t\tactions: obj.actions,\r\n\t\t\t\tresults: obj.results\r\n\t\t\t}];\r\n\t\t}\r\n\t}\r\n}); // declare Case","/** # CaseBase \r\n\r\nA `CaseBase` holds all cases for a game.\r\n*/\r\nvar CaseBase = exports.CaseBase = declare({\r\n\tconstructor: function CaseBase(params) {\r\n\t\tthis.game = params && params.game;\r\n\t\tif (params && typeof params.Case === 'function') {\r\n\t\t\tthis.Case = params.Case;\r\n\t\t}\r\n\t\tthis.random = params && params.random || Randomness.DEFAULT;\r\n\t},\r\n\r\n\t/** ## Distances ########################################################################### */\r\n\r\n\t/** The default `distance` is a form of Manhattan distance, which does not count `null` or \r\n\t`NaN` features.\r\n\t*/\r\n\tdistance: function distance(features1, features2) {\r\n\t\treturn base.Iterable.zip(features1, features2).mapApply(function (f1, f2) {\r\n\t\t\tif (f1 !== null && !isNaN(f1) && f2 !== null && !isNaN(f2)) {\r\n\t\t\t\treturn Math.abs(f1 - f2);\r\n\t\t\t} else {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}).sum();\r\n\t},\r\n\r\n\t/** ## Case acquisition #################################################################### */\r\n\r\n\t/** Adding a case to the database is not implemented by default.\r\n\t*/\r\n\taddCase: unimplemented('CaseBase', 'addCase(_case)'),\r\n\r\n\t/** The `addMatch` method runs the given `match` and adds all its game states as cases in the\r\n\tdatabase. It returns a promise.\r\n\t*/\r\n\taddMatch: function addMatch(match, options) {\r\n\t\tvar cdb = this,\r\n\t\t\tretainThreshold = +options.retainThreshold || 0;\r\n\t\treturn match.run().then(function () {\r\n\t\t\tvar result = match.result(),\r\n\t\t\t\thistory = match.history,\r\n\t\t\t\tentry, _case, breakStoring;\r\n\t\t\tfor (var i = history.length - 1; i >= 0; i--) {\r\n\t\t\t\tentry = history[i];\r\n\t\t\t\tif (entry.moves) {\r\n\t\t\t\t\tcdb.Case.fromGame(entry.state, i, entry.moves).forEach(function (_case) {\r\n\t\t\t\t\t\t_case.addResult(result);\r\n\t\t\t\t\t\tcdb.addCase(_case);\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//FIXME\r\n\t\t\t\t\t// breakStoring = retainThreshold !== 0 && retainThreshold > cdb.closestDistance(entry.state);\r\n\t\t\t\t\t// cdb.addCase(_case);\r\n\t\t\t\t\t// if (breakStoring) {\r\n\t\t\t\t\t//\tbreak;\r\n\t\t\t\t\t// }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn match;\r\n\t\t});\r\n\t},\r\n\r\n\t/** The `addMatches` method takes a sequence of `matches`, runs each in order and adds all \r\n\tresulting game states to the database. It returns a promise.\r\n\t*/\r\n\taddMatches: function addMatches(matches, options) {\r\n\t\tvar cdb = this,\r\n\t\t\tmatchCount = 0,\r\n\t\t\tintervalId = 0;\r\n\t\tif (options.logger) {\r\n\t\t\tintervalId = setInterval(function () {\r\n\t\t\t\toptions.logger.info(\"Added \"+ matchCount +\" matches.\");\r\n\t\t\t}, options.logTime || 30000);\r\n\t\t}\r\n\t\treturn Future.sequence(matches, function (match) {\r\n\t\t\tmatchCount++;\r\n\t\t\treturn cdb.addMatch(match, options);\r\n\t\t}).then(function (r) {\r\n\t\t\tif (options.logger) {\r\n\t\t\t\toptions.logger.info(\"Added \"+ matchCount +\" matches.\");\r\n\t\t\t}\r\n\t\t\tclearInterval(intervalId);\r\n\t\t\treturn r;\r\n\t\t});\r\n\t},\r\n\r\n\t/** The `populate` method adds cases to the database by running several matches and adding the\r\n\tresulting game states. The `options` argument may include the following:\r\n\r\n\t+ `game`: The game state from which to start the matches. The database's `game` is used by \r\n\tdefault.\r\n\r\n\t+ `n`: The number of matches to run; 100 by default.\r\n\r\n\t+ `trainer`: The player to use agains the opponents. A random player is used by default.\r\n\r\n\t+ `players`: The trainer's opponents to use to play the matches. The trainer is used by default.\r\n\r\n\tOther options are passed to the `addMatches` method. The result is a promise.\r\n\t*/\r\n\tpopulate: function populate(options) {\r\n\t\toptions = options || {};\r\n\t\tvar cdb = this,\r\n\t\t\tgame = options.game || this.game,\r\n\t\t\tn = isNaN(options.n) ? 100 : +options.n,\r\n\t\t\ttrainer = options.trainer || new ludorum.players.RandomPlayer({ name: 'RandomPlayer' }),\r\n\t\t\tplayers = options.players || [trainer];\r\n\t\tif (!Array.isArray(players)) {\r\n\t\t\tplayers = [players];\r\n\t\t}\r\n\t\tvar tournament = new ludorum.tournaments.Measurement(game, trainer, players, 1),\r\n\t\t\tmatchups = tournament.__matches__().toArray();\r\n\t\treturn this.addMatches(Iterable.range(Math.ceil(n / matchups.length))\r\n\t\t\t.product(matchups)\r\n\t\t\t.mapApply(function (i, match) {\r\n\t\t\t\treturn new ludorum.Match(game, match.players);\r\n\t\t\t}), options);\r\n\t},\r\n\r\n\t/** ## Database use ######################################################################## */\r\n\r\n\t/** The `cases` method returns the sequence of all cases in the database. Case order is not\r\n\tdefined.\r\n\t*/\r\n\tcases: unimplemented('CaseBase', 'cases(filters)'),\r\n\r\n\t/** The `nn` method returns the `k` neareast neighbours of the given game state. \r\n\t*/\r\n\tnn: function nn(k, game) {\r\n\t\tvar cb = this,\r\n\t\t\tcases = iterable(this.Case.fromGame(game)),\r\n\t\t\tcs = iterable(this.cases()).map(function (_case) {\r\n\t\t\t\tvar d = cases.map(function (c) {\r\n\t\t\t\t\treturn cb.distance(_case.features, c.features);\r\n\t\t\t\t}).min();\r\n\t\t\t\treturn [_case, d];\r\n\t\t\t}).sorted(function (c1, c2) {\r\n\t\t\t\treturn c1[1] - c2[1];\r\n\t\t\t}).toArray();\r\n\t\treturn cs.slice(0, +k);\r\n\t},\r\n\r\n\t/** The `closestDistance` method returns the distance to the closest case in the case base from\r\n\tthe given game state.\r\n\t*/\r\n\tclosestDistance: function closestDistance(game) {\r\n\t\tvar closest = this.nn(1, game);\r\n\t\treturn closest.length === 0 ? Infinity : closest[0][1];\r\n\t},\r\n\r\n\t/**TODO\r\n\t*/\r\n\tactionEvaluations: function actionEvaluations(game, role, options) {\r\n\t\tvar cb = this,\r\n\t\t\tk = options && +options.k || 10,\r\n\t\t\troleIndex = game.players.indexOf(role),\r\n\t\t\tr = base.iterable(game.moves()[role]).map(function (move) {\r\n\t\t\t\treturn [JSON.stringify(move), [move, 0]];\r\n\t\t\t}).toObject(),\r\n\t\t\tknn = cb.nn(k, game);\r\n\t\titerable(knn).forEachApply(function (_case, distance) {\r\n\t\t\tvar m = r[JSON.stringify(_case.actions[roleIndex])],\r\n\t\t\t\tresult = _case.results[role],\r\n\t\t\t\tev, support, ratio;\r\n\t\t\tif (m) {\r\n\t\t\t\tsupport = _case.count / (10 + _case.count);\r\n\t\t\t\tratio = (result[0] + result[2] && \r\n\t\t\t\t\t((result[0] - result[2]) / (result[0] + result[2])));\r\n\t\t\t\tev = support * ratio * (1 / (1 + distance));\r\n\t\t\t\tif (isNaN(ev)) {\r\n\t\t\t\t\traise(\"Action evaluation is NaN for case: \", JSON.stringify(_case),\r\n\t\t\t\t\t\t\" (distance= \", distance, \")!\");\r\n\t\t\t\t}\r\n\t\t\t\tm[1] += ev;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn Object.values(r);\r\n\t},\r\n\r\n\t/**TODO\r\n\t*/\r\n\tgameEvaluation: function gameEvaluation(game, role, options) { //FIXME\r\n\t\tvar cb = this,\r\n\t\t\tk = options && +options.k || 10,\r\n\t\t\tr = base.iterable(game.moves()[role]).map(function (move) {\r\n\t\t\t\treturn [JSON.stringify(move), [move, 0]];\r\n\t\t\t}).toObject(),\r\n\t\t\tknn = cb.nn(k, game, role);\r\n\t\treturn iterable(knn).map(function (_case, distance) {\r\n\t\t\treturn (_case.results[role][0] - _case.results[role][2]) / (1 + distance);\r\n\t\t}).sum();\r\n\t},\r\n\r\n\t/** ## Utilities ########################################################################### */\r\n\r\n\t'static __SERMAT__': {\r\n\t\tidentifier: 'CaseBase',\r\n\t\tserializer: function serialize_CaseBase(obj) { //FIXME\r\n\t\t\treturn [{\r\n\t\t\t\tgame: obj.game,\r\n\t\t\t\tencoding: obj.hasOwnProperty('encoding') ? obj.encoding : null\r\n\t\t\t}];\r\n\t\t}\r\n\t},\r\n}); // declare CaseBase","/** # CBR Player \r\n\r\n*/\r\nvar CBRPlayer = exports.CBRPlayer = base.declare(ludorum.Player, {\r\n\t/** \r\n\t*/\r\n\tconstructor: function CBRPlayer(params) {\r\n\t\tludorum.Player.call(this, params);\r\n\t\tthis.caseBase = params && params.caseBase;\r\n\t\tthis.k = params && params.k || 20;\r\n\t},\r\n\r\n\t/** \r\n\t*/\r\n\tcheckMoves: function checkMoves(game, role) {\r\n\t\tvar r = [[], []];\r\n\t\tthis.movesFor(game, role).forEach(function (move) {\r\n\t\t\tvar game2 = game.perform(move, role),\r\n\t\t\t\tresult = game2.result();\r\n\t\t\tif (!result) {\r\n\t\t\t\tr[1].push(move); // Not a losing move.\r\n\t\t\t} else if (result[role] > 0) {\r\n\t\t\t\tr[0].push(move); // Winning move.\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn r;\r\n\t},\r\n\r\n\t/** A `CBRPlayer` takes the action evaluations from the case base, and splits them into actions\r\n\twith possitive evaluations and the ones with evaluations less than or equal to zero. If there\r\n\tare possitively evaluated actions, one of these is chosen randomly with a probability \r\n\tproportional to the evaluation. If all actions have non possitive evaluations, one of these is\r\n\tchosen with a probability inversely proportional to the evaluation.   \r\n\t*/\r\n\tdecision: function decision(game, role) {\r\n\t\tvar checkMoves = this.checkMoves(game, role);\r\n\t\tif (checkMoves[0].length > 0) {\r\n\t\t\treturn this.random.choice(checkMoves[0]);\r\n\t\t} else if (checkMoves[1].length < 2) {\r\n\t\t\tif (checkMoves[1].length === 1) {\r\n\t\t\t\treturn checkMoves[1][0];\r\n\t\t\t} else { // if (checkMoves[1].length < 1)\r\n\t\t\t\treturn this.random.choice(this.movesFor(game, role));\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar actions = iterable(checkMoves[1]).map(function (action) {\r\n\t\t\t\treturn [action +'', [action, 0]];\r\n\t\t\t}).toObject();\r\n\t\tthis.caseBase.actionEvaluations(game, role, { k: this.k }).forEach(function (t) {\r\n\t\t\tvar entry = actions[t[0] +''];\r\n\t\t\tif (entry) {\r\n\t\t\t\tentry[1] += t[1];\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar minEval = +Infinity,\r\n\t\t\tpositiveActions = Object.values(actions).filter(function (t) {\r\n\t\t\t\tminEval = Math.min(minEval, t[1]);\r\n\t\t\t\treturn t[1] > 0;\r\n\t\t\t}),\r\n\t\t\tnegativeActions = Object.values(actions).filter(function (t) {\r\n\t\t\t\treturn t[1] <= 0;\r\n\t\t\t}).map(function (t) {\r\n\t\t\t\treturn [t[0], t[1] - minEval];\r\n\t\t\t}),\r\n\t\t\tresult;\r\n\t\tif (positiveActions.length > 1) {\r\n\t\t\tresult = this.random.weightedChoice(this.random.normalizeWeights(positiveActions));\r\n\t\t} else if (positiveActions.length === 1) {\r\n\t\t\tresult = positiveActions[0][0];\r\n\t\t} else {\r\n\t\t\tresult = this.random.weightedChoice(this.random.normalizeWeights(negativeActions));\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\r\n\t// Utilities. /////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tassess: function assess(players, options) {\r\n\t\tif (!Array.isArray(players)) {\r\n\t\t\tplayers = [players];\r\n\t\t}\r\n\t\tvar cbrPlayer = this,\r\n\t\t\tgame = this.caseBase.game,\r\n\t\t\tevaluation = iterable(players).map(function (player) {\r\n\t\t\t\treturn [player.name, iterable(game.players).map(function (p) {\r\n\t\t\t\t\t\treturn [p, [0,0,0]];\r\n\t\t\t\t\t}).toObject()];\r\n\t\t\t\t}).toObject(),\r\n\t\t\tn = options && +options.n || 300,\r\n\t\t\tfinishedMatchesCount = 0,\r\n\t\t\tintervalId = 0;\r\n\t\tif (options.logger) {\r\n\t\t\tintervalId = setInterval(function () {\r\n\t\t\t\toptions.logger.info(\"Assessment finished \"+ finishedMatchesCount +\" matches.\");\r\n\t\t\t}, options.logTime || 30000);\r\n\t\t}\r\n\t\treturn base.Future.sequence(base.Iterable.range(n).product(players), function (tuple) {\r\n\t\t\tvar player = tuple[1],\r\n\t\t\t\tmatchPlayers = base.Iterable.repeat(player, game.players.length).toArray(),\r\n\t\t\t\tplayerIndex = tuple[0] % game.players.length,\r\n\t\t\t\tplayerRole = game.players[playerIndex];\r\n\t\t\tmatchPlayers[playerIndex] = cbrPlayer;\r\n\t\t\tvar match = new ludorum.Match(game, matchPlayers);\r\n\t\t\treturn match.run().then(function () {\r\n\t\t\t\tvar r = match.result()[playerRole];\r\n\t\t\t\tevaluation[player.name][playerRole][r > 0 ? 0 : r < 0 ? 2 : 1]++;\r\n\t\t\t\tfinishedMatchesCount++;\r\n\t\t\t});\r\n\t\t}).then(function () {\r\n\t\t\tclearInterval(intervalId);\r\n\t\t\tif (options.logger) {\r\n\t\t\t\toptions.logger.info(\"Assessment finished \"+ finishedMatchesCount +\" matches.\");\r\n\t\t\t}\r\n\t\t\treturn evaluation;\r\n\t\t});\r\n\t}\r\n}); // declare CBRPlayer","/** # MemoryCaseBase\r\n\r\nA memory implementation of a `CaseBase`.\r\n*/\r\nvar MemoryCaseBase = dbs.MemoryCaseBase = declare(CaseBase, {\r\n\tconstructor: function MemoryCaseBase(params) {\r\n\t\tCaseBase.call(this, params);\r\n\t\tthis.__cases__ = [];\r\n\t\tthis.__index__ = {};\r\n\t},\r\n\r\n\tcases: function cases() {\r\n\t\treturn base.iterable(this.__cases__);\r\n\t},\r\n\t\r\n\taddCase: function addCase(_case) {\r\n\t\tvar id = _case.identifier();\r\n\t\tif (this.__index__[id]) {\r\n\t\t\tvar storedCase = this.__cases__[this.__index__[id]];\r\n\t\t\tstoredCase.merge(_case);\r\n\t\t} else {\r\n\t\t\tvar i = this.__cases__.push(_case) - 1;\r\n\t\t\tthis.__index__[id] = i;\r\n\t\t}\r\n\t}\r\n}); // declare MemoryCaseBase","/** # SQLiteCaseBase\r\n\r\nAn implementation of a `CaseBase` using SQLite3 through `better-sqlite3`.\r\n*/\r\ndbs.SQLiteCaseBase = declare(CaseBase, {\r\n\t/** \r\n\t*/\r\n\tconstructor: function SQLiteCaseBase(params) {\r\n\t\tCaseBase.call(this, params);\r\n\t\tthis.__setupDatabase__(params);\r\n\t},\r\n\r\n\t/** ## Database setup and management ####################################################### */\r\n\r\n\t/**\r\n\t*/\r\n\t__setupDatabase__: function __setupDatabase__(params) {\r\n\t\tvar game = this.game,\r\n\t\t\tDatabase = this.Database || require('better-sqlite3');\r\n\t\tif (params.db instanceof Database) {\r\n\t\t\tthis.__db__ = params.db;\r\n\t\t} else {\r\n\t\t\tthis.__db__ = new Database(typeof params.db === 'string' ? params.db : \r\n\t\t\t\t'./'+ game.name.toLowerCase() +'-cbr.sqlite');\r\n\t\t\tthis.__db__.pragma('journal_mode = OFF'); // Disable transactions.\r\n\t\t\tthis.__db__.pragma('cache_size = -128000'); // Increase default cache size.\r\n\t\t\tthis.__db__.pragma('encoding = \"UTF-8\"'); // Increase default cache size.\r\n\t\t}\r\n\t\t\r\n\t\tthis.__tableName__ = params.tableName || 'CB_'+ game.name;\r\n\t\tthis.__createTable__();\r\n\t},\r\n\r\n\t__createTable__: function __createTable__(tableName, game) {\r\n\t\ttableName = tableName || this.__tableName__;\r\n\t\tgame = game || this.game;\r\n\t\tvar _case = this.Case.fromGame(game)[0],\r\n\t\t\tactionColumns = game.players.map(function (p) {\r\n\t\t\t\treturn 'a_'+ p +' TEXT';\r\n\t\t\t}).join(', '),\r\n\t\t\tresultColumns = game.players.map(function (p) {\r\n\t\t\t\treturn 'won_'+ p +' INTEGER, tied_'+ p +' INTEGER, lost_'+ p +' INTEGER';\r\n\t\t\t}).join(', '),\r\n\t\t\tfeatureColumns = _case.features.map(function (_, i) {\r\n\t\t\t\treturn 'f'+ i +' INTEGER';\r\n\t\t\t}).join(', ');\r\n\t\treturn this.__runSQL__('CREATE TABLE IF NOT EXISTS '+ tableName +\r\n\t\t\t'(id TEXT PRIMARY KEY, count INTEGER, ply REAL, '+\r\n\t\t\tactionColumns +', '+ resultColumns +', '+ featureColumns +')');\r\n\t},\r\n\r\n\t__runSQL__: function __runSQL__(sql) {\r\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\t\ttry {\r\n\t\t\tvar stmt = this.__db__.prepare(sql);\r\n\t\t\treturn stmt.run.apply(stmt, args);\r\n\t\t} catch (err) {\r\n\t\t\tthrow new Error(\"Error executing `\"+ sql +\"` \"+ JSON.stringify(args) +\"!\");\r\n\t\t}\r\n\t},\r\n\r\n\t__getSQL__: function __getSQL__(sql) {\r\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\t\ttry {\r\n\t\t\tvar stmt = this.__db__.prepare(sql);\r\n\t\t\treturn stmt.all.apply(stmt, args);\r\n\t\t} catch (err) {\r\n\t\t\tthrow new Error(\"Error querying `\"+ sql +\"` \"+ JSON.stringify(args) +\"!\");\r\n\t\t}\r\n\t},\r\n\r\n\t/** ## Cases ############################################################################### */\r\n\r\n\taddCase: function addCase(_case) {\r\n\t\tvar players = this.game.players,\r\n\t\t\trecord = _case.record(),\r\n\t\t\tfields = Object.keys(record),\r\n\t\t\tsql = 'INSERT OR IGNORE INTO '+ this.__tableName__ +' ('+ fields.join(',') +\r\n\t\t\t\t') VALUES ('+ Iterable.repeat('?', fields.length).join(',') +')',\r\n\t\t\tisNew = this.__runSQL__(sql, fields.map(function (f) {\r\n\t\t\t\t\treturn record[f];\r\n\t\t\t\t})).changes > 0;\r\n\t\tif (!isNew) { // Insert was ignored because the case is already stored.\r\n\t\t\tthis.__runSQL__('UPDATE '+ this.__tableName__ +' '+\r\n\t\t\t\t'SET count = count + 1, ply = (ply * count + '+ (_case.ply || 0) +') / (count + 1), '+\r\n\t\t\t\tplayers.map(function (p) {\r\n\t\t\t\t\tvar r = _case.results[p],\r\n\t\t\t\t\t\tsets = [];\r\n\t\t\t\t\tif (r[0]) {\r\n\t\t\t\t\t\tsets.push('won_'+ p +' = won_'+ p +' + '+ r[0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (r[1]) {\r\n\t\t\t\t\t\tsets.push('tied_'+ p +' = tied_'+ p +' + '+ r[1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (r[2]) {\r\n\t\t\t\t\t\tsets.push('lost_'+ p +' = lost_'+ p +' + '+ r[2]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn sets.join(', ');\r\n\t\t\t\t}).join(', ') +' WHERE id = \\''+ record.id +'\\''\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\tcases: function cases() {\r\n\t\treturn this.__getSQL__('SELECT * FROM '+ this.__tableName__)\r\n\t\t\t.map(this.Case.fromRecord.bind(this.Case));\r\n\t},\r\n\r\n\t__nn_sql__: function __nn_sql__(k, game) {\r\n\t\tvar cases = this.Case.fromGame(game);\r\n\t\treturn 'SELECT *, min('+ cases.map(function (_case) {\r\n\t\t\t\treturn _case.features.map(function (v, i) {\r\n\t\t\t\t\treturn v !== null && !isNaN(v) ? 'abs(ifnull(f'+ i +'-('+ v +'),0))' : '0';\r\n\t\t\t\t}).join('+');\r\n\t\t\t}).join(', ') +') AS distance '+\r\n\t\t\t'FROM '+ this.__tableName__ +' '+\r\n\t\t\t'ORDER BY distance ASC LIMIT '+ k;\r\n\t},\r\n\r\n\tnn: function nn(k, game) {\r\n\t\tvar cb = this,\r\n\t\t\tsql = this.__nn_sql__(k, game);\r\n\t\treturn this.__db__.prepare(sql).all().map(function (row) {\r\n\t\t\treturn [cb.Case.fromRecord(row), row.distance];\r\n\t\t});\r\n\t}\r\n}); // declare SQLiteCaseBase\r\n\r\n","/**\r\n \r\n*/\r\ngames.TicTacToe = (function () {\r\n\tfunction directFeatures(game) {\r\n\t\tvar board = typeof game === 'string' ? game : game.board;\r\n\t\treturn board.split('').map(function (chr) {\r\n\t\t\treturn chr === 'X' ? (+1) : chr === 'O' ? (-1) : 0; \r\n\t\t});\r\n\t}\r\n\r\n\tvar MAPPINGS = [\r\n\t\t[0,1,2,3,4,5,6,7,8], // original\r\n\t\t[2,1,0,5,4,3,8,7,6], // vertical axis symmetry\r\n\t\t[6,7,8,3,4,5,0,1,2], // horizontal axis symmetry\r\n\t\t[6,3,0,7,4,1,8,5,2], // 90 clockwise rotation\r\n\t\t[2,5,8,1,4,7,0,3,6], // 90 counter-clockwise rotation \r\n\t\t[8,7,6,5,4,3,2,1,0], // central symmetry\r\n\t\t[8,5,2,7,4,1,6,3,0], // 90 counter-clockwise rotation + vertical axis symmetry\r\n\t\t[0,3,6,1,4,7,2,5,8]  // 90 clockwise rotation + vertical axis symmetry\r\n\t];\r\n\r\n\tfunction equivalent(game) {\r\n\t\tvar board = typeof game === 'string' ? game : game.board,\r\n\t\t\tmaps = MAPPINGS.map(function (mapping) {\r\n\t\t\t\treturn mapping.map(function (i) {\r\n\t\t\t\t\treturn board.charAt(i);\r\n\t\t\t\t}).join('');\r\n\t\t\t});\r\n\t\tmaps.sort();\r\n\t\treturn maps;\r\n\t}\r\n\r\n\treturn {\r\n\t\tdirectFeatures: directFeatures,\r\n\r\n\t\t/**\r\n\t\t*/\r\n\t\tDirectCase: declare(Case, {\r\n\t\t\t'static fromGame': function fromGame(game, ply, moves) {\r\n\t\t\t\tvar _case = new this({\r\n\t\t\t\t\t\tply: +ply,\r\n\t\t\t\t\t\tfeatures: directFeatures(game),\r\n\t\t\t\t\t\tactions: Case.actionsFromMoves(game.players, moves),\r\n\t\t\t\t\t\tresults: Case.emptyResults(game.players)\r\n\t\t\t\t\t});\r\n\t\t\t\treturn [_case];\r\n\t\t\t}\r\n\t\t}),\r\n\r\n\t\tequivalent: equivalent,\r\n\r\n\t\t/**\r\n\t\t*/\r\n\t\tEquivalenceCase: declare(Case, {\r\n\t\t\t'static fromGame': function fromGame(game, ply, moves) {\r\n\t\t\t\tvar board = game.board.split(''),\r\n\t\t\t\t\tactivePlayer = game.activePlayer();\r\n\t\t\t\tif (moves) {\r\n\t\t\t\t\tboard[moves[activePlayer]] = '!';\r\n\t\t\t\t}\r\n\t\t\t\tvar boards = equivalent(board.join('')).map(function (b) {\r\n\t\t\t\t\tvar m = b.indexOf('!');\r\n\t\t\t\t\treturn b.replace('!', '_') + m;\r\n\t\t\t\t});\r\n\t\t\t\tboards.sort();\r\n\t\t\t\tboard = boards[0];\r\n\t\t\t\tif (moves) {\r\n\t\t\t\t\tmoves[activePlayer] = +(board.substr(9));\r\n\t\t\t\t}\r\n\t\t\t\tvar _case = new this({\r\n\t\t\t\t\t\tply: +ply,\r\n\t\t\t\t\t\tfeatures: directFeatures(board.substr(0,9)),\r\n\t\t\t\t\t\tactions: Case.actionsFromMoves(game.players, moves),\r\n\t\t\t\t\t\tresults: Case.emptyResults(game.players)\r\n\t\t\t\t\t});\r\n\t\t\t\treturn [_case];\r\n\t\t\t}\r\n\t\t})\r\n\t};\r\n})(); // declare TicTacToe.DirectCase","/**\r\n */\r\ngames.Risk = (function () {\r\n  return {\r\n    /** The \"Risk\" encoding has 83 features , 42 to define the number of troops in a territory,\r\n     *  42 to define to which player that territory corresponds based on its turn,\r\n     *  being 0 the corresponding player with the current turn,\r\n     *  1 the next and so successively and 1 that determines the stage of the game  */\r\n\r\n    Turn: function turn(game, otherPlayer) {\r\n      var active = game.players.indexOf(active);\r\n      var other = game.players.indexOf(otherPlayer);\r\n      if (other > active) {\r\n        return other - active;\r\n      } else {\r\n        return 6 - (active - other);\r\n      }\r\n    },\r\n\r\n    Risk: function encodingRisk(game, moves, ply) {\r\n      return {\r\n        ply: ply,\r\n        features: game.boardMap.territories\r\n          .map(t => turn(game, s[t][0])).concat(s[t][1]).concat(stage), // For each territory , assign colour and number of troops , change colour based on turn.\r\n        actions: !moves ? null : game.players.map(function (p) {\r\n          return moves.hasOwnProperty(p) ? moves[p] : null;\r\n        })\r\n      };\r\n    }\r\n  };\r\n})();\r\n","/** # Utilities\r\n\r\n*/\r\n","// See __prologue__.js\r\n\treturn exports;\r\n}\r\n"]}